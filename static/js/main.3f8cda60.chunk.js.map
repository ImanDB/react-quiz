{"version":3,"sources":["components/Result/Result.css","components/Quiz/Quiz.css","assets/first-choice.png","containers/App/App.css","assets/second-choice.png","components/Quiz/Quiz.js","components/Result/Result.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","results","resultTitle","resultDescription","shoeTitle","shoeDescription","shoePrice","quiz","question","quizButton","__webpack_require__","p","App","startButton","props","react_default","a","createElement","className","classes","onClick","selectedAnswer","answers","copy","result","firstShoe","secondShoe","src","require","alt","state","showQuiz","showResult","showQuizHandler","_this","setState","selectedAnswerHandler","value","answer","questions","nextQuestionID","shoesRating","ratingIncrease","shoesList","Object","toConsumableArray","shoes","_loop","shoeName","currentShoe","find","shoe","name","rating","nextQuestion","sort","compare","includes","replace","b","_this2","this","axios","get","then","response","data","Quiz_Quiz","Result_Result","Fragment","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,QAAA,0BAAAC,YAAA,8BAAAC,kBAAA,oCAAAC,UAAA,4BAAAC,gBAAA,kCAAAC,UAAA,yGCAlBP,EAAAC,QAAA,CAAkBO,KAAA,qBAAAC,SAAA,yBAAAC,WAAA,gDCDlBV,EAAAC,QAAiBU,EAAAC,EAAuB,4DCCxCZ,EAAAC,QAAA,CAAkBY,IAAA,mBAAAC,YAAA,gDCDlBd,EAAAC,QAAiBU,EAAAC,EAAuB,gOCezBJ,EAZF,SAACO,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQZ,MACpBQ,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQX,UAAWM,EAAMN,UACxCO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQV,WAAYW,QAAS,kBAAMN,EAAMO,eAAe,KAAKP,EAAMQ,QAAQ,GAAGC,MACjGR,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQV,WAAYW,QAAS,kBAAMN,EAAMO,eAAe,KAAKP,EAAMQ,QAAQ,GAAGC,yBCalGC,EAnBA,SAACV,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQlB,SACpBc,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQjB,aAAvB,oBACAa,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQhB,mBAAtB,gDAAuFW,EAAMW,UAA7F,QAA6GX,EAAMY,WAAnH,6BAEAX,EAAAC,EAAAC,cAAA,OAAKU,IAAKC,EAAQ,IAAkCC,IAAI,gBACxDd,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQf,WAAYU,EAAMW,WACzCV,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQd,iBAAtB,sCACAU,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQb,WAAvB,cAEAS,EAAAC,EAAAC,cAAA,OAAKU,IAAKC,EAAQ,IAAmCC,IAAI,iBACzDd,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQf,WAAYU,EAAMY,YACzCX,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQd,iBAAtB,sCACAU,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQb,WAAvB,gBCsEGM,6MAhFbkB,MAAQ,CACNC,UAAU,EACVC,YAAY,KAGdC,gBAAkB,WAChBC,EAAKC,SAAS,CAAEJ,UAAU,OAG5BK,sBAAwB,SAACC,GACvB,IAAMC,EAASJ,EAAKJ,MAAMS,UAAUL,EAAKJ,MAAMU,gBAAgBlB,QAAQe,GACjEI,EAAcH,EAAOI,eACrBC,EAASC,OAAAC,EAAA,EAAAD,CAAOV,EAAKJ,MAAMgB,OAHAC,EAAA,SAItBC,GACT,IAAMC,EAAcN,EAAUO,KAAK,SAAAC,GAAI,OAAIA,EAAKC,OAASJ,IACzDC,EAAYI,OAASJ,EAAYI,OAASZ,EAAYO,IAFxD,IAAK,IAAMA,KAAYP,EAAaM,EAAzBC,GAKX,GAA4B,KAAxBV,EAAOgB,aACTpB,EAAKC,SAAS,CACZK,eAAgBF,EAAOgB,aACvBR,MAAOH,QAEJ,CAIL,IAAK,IAAMQ,KAFXjB,EAAKJ,MAAMgB,MAAMS,KAAKrB,EAAKsB,SAERb,EACdA,EAAUQ,GAAMC,KAAKK,SAAS,OAC/Bd,EAAUQ,GAAMC,KAAOT,EAAUQ,GAAMC,KAAKM,QAAQ,IAAK,MAG7DxB,EAAKC,SAAS,CACZH,YAAY,EACZD,UAAU,QAKhByB,QAAU,SAACxC,EAAG2C,GACZ,OAAI3C,EAAEqC,OAASM,EAAEN,OACR,EACLrC,EAAEqC,OAASM,EAAEN,QACP,EACH,sFAGW,IAAAO,EAAAC,KAClBC,IAAMC,IAAI,aAAaC,KAAK,SAAAC,GAC1BL,EAAKzB,SAAS,CACZW,MAAOmB,EAASC,KAAKpB,MACrBP,UAAW0B,EAASC,KAAK3B,UACzBC,eAAgB,uCAMpB,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQP,KACrBiD,KAAK/B,MAAMC,WAAa8B,KAAK/B,MAAME,WAClCjB,EAAAC,EAAAC,cAACkD,EAAD,CACE3D,SAAUqD,KAAK/B,MAAMS,UAAUsB,KAAK/B,MAAMU,gBAAgBjB,KAC1DD,QAASuC,KAAK/B,MAAMS,UAAUsB,KAAK/B,MAAMU,gBAAgBlB,QACzDD,eAAgBwC,KAAKzB,yBAGtByB,KAAK/B,MAAMC,UAAY8B,KAAK/B,MAAME,WACnCjB,EAAAC,EAAAC,cAACmD,EAAD,CAAQ3C,UAAWoC,KAAK/B,MAAMgB,MAAM,GAAGM,KAAM1B,WAAYmC,KAAK/B,MAAMgB,MAAM,GAAGM,OAE7ErC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACEtD,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQN,YAAaO,QAASyC,KAAK5B,iBAAtD,yBAzEMqC,aCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,KAAK,SAAAoB,GACjCA,EAAaC","file":"static/js/main.3f8cda60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"Result__results___2G_ac\",\"resultTitle\":\"Result__resultTitle___1JpQB\",\"resultDescription\":\"Result__resultDescription___mD1U7\",\"shoeTitle\":\"Result__shoeTitle___960zb\",\"shoeDescription\":\"Result__shoeDescription___3zW9f\",\"shoePrice\":\"Result__shoePrice___BrLY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quiz\":\"Quiz__quiz___tRtRJ\",\"question\":\"Quiz__question___qw0n8\",\"quizButton\":\"Quiz__quizButton___3At6R\"};","module.exports = __webpack_public_path__ + \"static/media/first-choice.a33960f8.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App___1Ez4i\",\"startButton\":\"App__startButton___1Mnt_\"};","module.exports = __webpack_public_path__ + \"static/media/second-choice.63f5d214.png\";","import React from 'react';\r\nimport classes from './Quiz.css';\r\n\r\nconst quiz = (props) => {\r\n    return (\r\n        <div className={classes.quiz}>\r\n            <h3 className={classes.question}>{props.question}</h3>\r\n            <div>\r\n                <button className={classes.quizButton} onClick={() => props.selectedAnswer(0)}>{props.answers[0].copy}</button>\r\n                <button className={classes.quizButton} onClick={() => props.selectedAnswer(1)}>{props.answers[1].copy}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default quiz;","import React from 'react';\r\nimport classes from './Result.css';\r\n\r\nconst result = (props) => {\r\n    return (\r\n        <div className={classes.results}>\r\n            <h4 className={classes.resultTitle}>Congratulations!</h4>\r\n            <p className={classes.resultDescription}>Based on your selection we've decided on the {props.firstShoe} and {props.secondShoe}!\r\n            Enjoy the 30 day trial!</p>\r\n            <img src={require('../../assets/first-choice.png')} alt=\"first offer\" />\r\n            <h4 className={classes.shoeTitle}>{props.firstShoe}</h4>\r\n            <p className={classes.shoeDescription}>Ultimate lightweight running shoe.</p>\r\n            <h5 className={classes.shoePrice}>CHF 230.00</h5>\r\n\r\n            <img src={require('../../assets/second-choice.png')} alt=\"second offer\" />\r\n            <h4 className={classes.shoeTitle}>{props.secondShoe}</h4>\r\n            <p className={classes.shoeDescription}>Ultimate lightweight running shoe.</p>\r\n            <h5 className={classes.shoePrice}>CHF 220.00</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default result;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport classes from './App.css';\nimport Quiz from '../../components/Quiz/Quiz';\nimport Result from '../../components/Result/Result';\n\nclass App extends Component {\n  state = {\n    showQuiz: false,\n    showResult: false\n  }\n\n  showQuizHandler = () => {\n    this.setState({ showQuiz: true });\n  }\n\n  selectedAnswerHandler = (value) => {\n    const answer = this.state.questions[this.state.nextQuestionID].answers[value];\n    const shoesRating = answer.ratingIncrease;\n    const shoesList = [...this.state.shoes];\n    for (const shoeName in shoesRating) {\n      const currentShoe = shoesList.find(shoe => shoe.name === shoeName);\n      currentShoe.rating = currentShoe.rating + shoesRating[shoeName];\n    }\n\n    if (answer.nextQuestion !== \"\") {\n      this.setState({\n        nextQuestionID: answer.nextQuestion,\n        shoes: shoesList\n      })\n    } else {\n      // Sorting the shoes array\n      this.state.shoes.sort(this.compare);\n      // Removing underscore from shoe name before displaying it to user\n      for (const shoe in shoesList) {\n        if(shoesList[shoe].name.includes('_')){\n          shoesList[shoe].name = shoesList[shoe].name.replace('_', ' ');\n        }\n      }\n      this.setState({\n        showResult: true,\n        showQuiz: false\n      })\n    }\n  }\n\n  compare = (a, b) => {\n    if (a.rating < b.rating)\n      return 1;\n    if (a.rating > b.rating)\n      return -1;\n    return 0;\n  }\n\n  componentDidMount() {\n    axios.get('data.json').then(response => {\n      this.setState({\n        shoes: response.data.shoes,\n        questions: response.data.questions,\n        nextQuestionID: 0\n      })\n    });\n  }\n\n  render() {\n    return (\n      <div className={classes.App}>\n        {this.state.showQuiz && !this.state.showResult ?\n          <Quiz\n            question={this.state.questions[this.state.nextQuestionID].copy}\n            answers={this.state.questions[this.state.nextQuestionID].answers}\n            selectedAnswer={this.selectedAnswerHandler}\n          />\n          :\n          !this.state.showQuiz && this.state.showResult ?\n          <Result firstShoe={this.state.shoes[0].name} secondShoe={this.state.shoes[1].name} />\n          :\n          <>\n            <h1>Take the quiz and try your first pair!</h1>\n            <button className={classes.startButton} onClick={this.showQuizHandler} >Try On Trial</button>\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}